@page "/editproperty/{Id:int}"

@using apartment_app.Data
@using System.IO;
@using Microsoft.EntityFrameworkCore
@inject NavigationManager NavManager
@inject PropertiesContext PropertiesDB

<link href="css/AddProperty.css" rel="stylesheet" />

<h1>Edit Property</h1>

<PropertyComponent Property="@Property" PropertyChanged="@EditPropertyFunction"></PropertyComponent>

@code {

    [Parameter]
    public int? Id { get; set; }

    public Property Property { get; set; } = new Property();

    protected override async Task OnInitializedAsync()
    {
        if (Id != null)
        {
            Property = await PropertiesDB.Property.FirstOrDefaultAsync(m => m.ID == Id);
            if (Property == null)
            {
                NavManager.NavigateTo("/NotFound");
            }
        }
        else
        {
            NavManager.NavigateTo("/NotFound");
        }
    }

    private async Task EditPropertyFunction(Property newProperty)
    {
        this.Property = newProperty;
        PropertiesDB.Attach(Property).State = EntityState.Modified;

        try
        {
            await PropertiesDB.SaveChangesAsync();
        }
        catch (DbUpdateConcurrencyException)
        {
            if (!PropertyExists(Property.ID))
            {
                NavManager.NavigateTo("/NotFound");
            }
            else
            {
                throw;
            }
        }

        NavManager.NavigateTo("/viewproperty/" + this.Property.ID);
    }

    private bool PropertyExists(int id)
    {
        return PropertiesDB.Property.Any(e => e.ID == id);
    }

}