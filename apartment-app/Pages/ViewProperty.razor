@page "/viewproperty/{Id:int}"
@using apartment_app.Data
@using Microsoft.EntityFrameworkCore
@inject IModalService Modal
@inject NavigationManager NavManager
@inject PropertiesContext PropertiesDB

<link href="css/ViewProperty.css" rel="stylesheet" />

<div class="view-property-page">
    <div class="title">
        <h1>View Property</h1>
        <button class="btn btn-primary-outline" @onclick="@(() => NavManager.NavigateTo("/editproperty/" + Property.ID))"> <span class="oi oi-pencil"></span> </button>
    </div>

    @if (Property == null)
    {
        <h3>Property with given ID does not exist!</h3>
    }
    else
    {
        <h3>Name : @Property.Name</h3>
        @if (Property.Owner == null)
        {
            @* Replace this with different URL to apply *@
            <h3>Owner : <button class="btn btn-secondary" type="button"> No Owner, Claim now</button></h3>
        }
        else
        {
            <h3>Owner : @(Property.Owner.FirstName + " " + @Property.Owner.LastName)</h3>
        }
        <div class="view-info-box">
            <h3>Address : @Property.AddressLine1</h3>
            <h3>          @Property.AddressLine2</h3>
            <h3>Rent : @Property.Rent</h3>
            <h3>Spaces : @Property.TotalSpaces</h3>
            <h3>Spaces Available : @Property.SpacesAvailable</h3>
            <h3>Description : @Property.Description</h3>
        </div>
        <button class="btn btn-primary" type="button">Contact Owner</button>

        <h3>Map: TODO</h3>

        <button class="btn btn-primary-outline" @onclick="ConfirmDelete"> <span class="oi oi-trash"></span> </button>
    }
</div>



@code {
    [Parameter]
    public int Id { get; set; }

    public Property Property { get; set; }

    private bool editMode = false;

    protected override async Task OnInitializedAsync()
    {
        Property = await PropertiesDB.Property.FirstOrDefaultAsync(m => m.ID == Id);
    }

    private void ConfirmDelete()
    {
        ModalParameters parameters = new ModalParameters();
        parameters.Add(nameof(Property), Property);
        Modal.Show(typeof(ConfirmDeleteProperty), "Confirm deleting Property", parameters);
    }
}
